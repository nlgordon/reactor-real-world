import com.bmuschko.gradle.docker.tasks.container.*

buildscript {
    ext {
        // Must be M3 to play nice with com.bmuschko.docker-remote-api plugin due to jersey issue at: https://github.com/bmuschko/gradle-docker-plugin/issues/467
        springBootVersion = '2.0.0.M4'
    }
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.bmuschko.docker-remote-api" version "3.1.0"
    id "groovy"
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


repositories {
    maven { url 'http://repo.spring.io/milestone' }
    jcenter()
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "io.projectreactor:reactor-bom:Bismuth-RELEASE"
    }
}

dependencies {
	compile 'org.codehaus.groovy:groovy-all'
    compile 'io.projectreactor:reactor-core'
    compile 'io.projectreactor.ipc:reactor-netty'
    compile 'org.postgresql:postgresql'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile 'com.google.code.gson:gson'
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    compile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    runtime 'org.postgresql:postgresql'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'io.projectreactor:reactor-test'
    testCompile "org.spockframework:spock-core:1.1-groovy-2.4"
    testCompile "org.spockframework:spock-spring:1.1-groovy-2.4"
}

ext {
    postgresContainerName = "reactor_real_world_postgres"
}

// docker run --name reactor-postgres -p 5432:5432/tcp -e POSTGRES_PASSWORD=mysecretpassword -d postgres
task createPostgresContainer(type: DockerCreateContainer) {
    targetImageId { 'postgres:latest' }
    portBindings = ['5432:5432']
    env = ['POSTGRES_PASSWORD=mysecretpassword']

    containerName postgresContainerName
}

// Currently this is broken with boot 2.0.0.M4, works with 2.0.0.M3, but that breaks some spring 5 awesome.
task startPostgresContainer(type: DockerStartContainer, dependsOn: createPostgresContainer) {
    targetContainerId { createPostgresContainer.getContainerId() }
}

task stopPostgresContainer(type: DockerStopContainer) {
    targetContainerId { postgresContainerName }
}

task cleanupPostgresContainer(type: DockerRemoveContainer, dependsOn: stopPostgresContainer) {
    targetContainerId { postgresContainerName }
}

task wrapper(type: Wrapper) {
	gradleVersion = '4.9'
}

//test.dependsOn(startPostgresContainer)
//test.finalizedBy(cleanupPostgresContainer)
